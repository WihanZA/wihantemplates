% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{compare_params}
\alias{compare_params}
\title{Compare YAML parameters across two files}
\usage{
compare_params(file1, file2, common = NULL, throw_error = FALSE)
}
\arguments{
\item{file1}{Path to the first file}

\item{file2}{Path to the second file}

\item{common}{Character vector of parameter name patterns to compare between files;
the function will perform partial matching (using regex) on these patterns.
If NULL or empty (default), all parameters will be compared.}

\item{throw_error}{Logical; if TRUE, errors will be thrown instead of warnings when mismatches are found (default: FALSE)}
}
\value{
Invisible NULL (function is used for its side effects)
}
\description{
This function compares specified parameters between the YAML front matter of two files
to ensure consistency in metadata. It issues warnings or errors
if discrepancies are found in parameters that should be identical across both files.
}
\details{
The function flattens nested YAML parameters for comparison. Two modes of operation are available:
\enumerate{
\item When \code{common = NULL} (default), all parameters in both files are compared
\item When patterns are provided in \code{common}, only parameters matching those patterns are compared
}

For pattern matching, the function searches for partial matches using regex. For example,
providing \code{"client"} will match all parameters containing that string, such as \code{client$value$name}.

When differences are found, the function throws an appropriate warning/error.
}
